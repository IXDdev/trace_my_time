
    done: 
        //
            point cloud merging 

    req:
        mixed/trivial  
            image stiching of the panoramas 

        quickdemo 
            ok-feature extraction 
            ok-feature points visualization 
            as boxes 
            https://art-science.org/journal/v14n4/v14n4pp117/artsci-v14n4pp117.pdf
            number of points can be rendered easily? 
            okh-read simple mesh, rendering? draw calls? write to mesh? 
            mesh fitting, email 
                I took a look into some literature and found that there are some existing methods 
                works well with mesh simplification. eg. 
                I tried to use xxx to simplify our APB model and got a relative good result. 
                So it is a little bit unclear to me: 
                What would be our goal? Are we going to extract faces directly from point clouds?
            texturing 
                texcoordi init -1
                back face drop in uv computation
                improve alignment (kabsch algorithm)
                camera selection, which material, init material
            should have a camera selection first
            as a value bar
                0. point sel as test
                1. face sel
                3. uv computation
                4. export
         
        >points processing 
            points cleaning with vr 
            points cleaning for quick test 
            points classification 

        >surface recon
            with realitycapture workflow 
            with Osr workflow 
            
        model fitting 
            //add new simple mesh to the current scene: 
            simplify pc: subsample point cloud 
            clod rendering, or similar LOD (may not need as I was ...)
            feature vis, local feature 
            vis las files in tu wien fw 
            hands-on papers/ tools, try them out 
            vr model fitting 
            feature computing: pcl and cgv 
            
            pipeline explaination with markdown 
            ref: https://github.com/miykael/3dprintyourbrain

        texturing recon 
            ok-random texture coordinates
            ok-extract panaroma pictures with py 
            or reacp photo 
            et 1h 
            ok-panaroma loading 
            ok-texture rel paper 
            ok-textured cube test 
            ok-quick test with cgv 
            ok-control mesh rendering style 
            ok-ixMesh management 
            ok-generate lines, random sample points and connect to camera position 
            ok-point selection, faces selection 
            currently done with mesh mixer 
            coordinate computing 
            per shot? merged? 
            ask gum
            fps? vertices?

        unity stuff 
            a custom shader and csharp library 
            code reading: steamVR plugin 
            et nh 
            setup a server, sync, UnityXR  
            et 1h 
            boxing game multiplayer 
            et 1h 
            climbing game
            et 1h   

        IMEngine_vk vr experience 
            ...